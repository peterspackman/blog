(()=>{var e={},s={};function t(a){var o=s[a];if(void 0!==o)return o.exports;var r=s[a]={exports:{}};return e[a](r,r.exports,t),r.exports}t.m=e,t.d=(e,s)=>{for(var a in s)t.o(s,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:s[a]})},t.f={},t.e=e=>Promise.all(Object.keys(t.f).reduce(((s,a)=>(t.f[a](e,s),s)),[])),t.u=e=>"assets/js/"+e+"."+{3223:"6c49d0ae",9819:"ebb9d4c0"}[e]+".js",t.miniCssF=e=>{},t.o=(e,s)=>Object.prototype.hasOwnProperty.call(e,s),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.p="/",t.gca=function(e){return e={}[e]||e,t.p+t.u(e)},(()=>{t.b=self.location+"/../../../";var e={842:1};t.f.i=(s,a)=>{e[s]||importScripts(t.p+t.u(s))};var s=self.webpackChunkblog=self.webpackChunkblog||[],a=s.push.bind(s);s.push=s=>{var o=s[0],r=s[1],l=s[2];for(var c in r)t.o(r,c)&&(t.m[c]=r[c]);for(l&&l(t);o.length;)e[o.pop()]=1;a(s)}})();let a=null,o=null;self.addEventListener("message",(async function(e){const{type:s,data:r}=e.data;try{switch(s){case"init":await async function(){try{postMessage({type:"log",level:2,message:"Initializing OCC in worker..."});try{a=await t.e(9819).then(t.bind(t,9819)),postMessage({type:"log",level:2,message:"Loaded OCC package"})}catch(e){return void postMessage({type:"initialized",success:!1,error:`OCC package import failed: ${e.message}. The WASM module contains Node.js-specific imports that don't work in browsers.`})}o=await a.loadOCC(),o.registerLogCallback&&o.registerLogCallback(((e,s)=>{postMessage({type:"log",level:e,message:s})})),postMessage({type:"initialized",success:!0})}catch(s){postMessage({type:"initialized",success:!1,error:s.message})}}();break;case"calculate":await async function(s){try{const o=performance.now();postMessage({type:"progress",stage:"start",message:"Starting calculation..."}),postMessage({type:"log",level:2,message:"Creating molecule from XYZ data..."});const r=await a.moleculeFromXYZ(s.xyzData);postMessage({type:"log",level:2,message:`Molecule created: ${r.size()} atoms`}),postMessage({type:"progress",stage:"setup",message:`Setting up ${s.method.toUpperCase()} calculation with ${s.basisSet} basis...`});const l=await a.createQMCalculation(r,s.basisSet),c=(new a.SCFSettings).setMaxIterations(s.maxIterations).setEnergyTolerance(s.energyTolerance);let i;if(postMessage({type:"progress",stage:"calculation",message:"Running SCF iterations..."}),"hf"===s.method)postMessage({type:"log",level:2,message:"Running Hartree-Fock calculation..."}),i=await l.runHF(c);else if(s.method.startsWith("dft-")){const e=s.method.split("-")[1];postMessage({type:"log",level:2,message:`Running DFT calculation with ${e} functional...`}),i=await l.runDFT(e,{scfSettings:c})}const n=performance.now()-o;postMessage({type:"progress",stage:"complete",message:"Calculation completed successfully!"});const g={energy:i,energyInEV:27.2114*i,elapsedMs:n,converged:!0};try{const e=await l.calculateProperties(["orbitals","homo","lumo","gap"]);g.properties={homo:e.homo,lumo:e.lumo,gap:e.gap}}catch(e){postMessage({type:"log",level:3,message:`Could not calculate properties: ${e.message}`})}try{const e=l.wavefunction;g.wavefunctionData={fchk:e.exportToString("fchk"),numBasisFunctions:l.basis.nbf(),numAtoms:r.size()}}catch(e){postMessage({type:"log",level:3,message:`Could not export wavefunction: ${e.message}`})}postMessage({type:"progress",stage:"matrices",message:"Computing matrices..."}),g.matrices={};try{const s=new(a.getModule().HartreeFock)(l.basis),o=l.wavefunction,c=e=>{const s=e.rows(),t=e.cols(),a=[];for(let o=0;o<s;o++){const s=[];for(let a=0;a<t;a++)s.push(e.get(o,a));a.push(s)}return{rows:s,cols:t,data:a}};postMessage({type:"log",level:2,message:"Computing overlap matrix..."});try{const e=s.overlapMatrix();g.matrices.overlap=c(e)}catch(e){postMessage({type:"log",level:3,message:`Could not compute overlap matrix: ${e.message}`})}postMessage({type:"log",level:2,message:"Computing kinetic energy matrix..."});try{const e=s.kineticMatrix();g.matrices.kinetic=c(e)}catch(e){postMessage({type:"log",level:3,message:`Could not compute kinetic matrix: ${e.message}`})}postMessage({type:"log",level:2,message:"Computing nuclear attraction matrix..."});try{const e=s.nuclearAttractionMatrix();g.matrices.nuclear=c(e)}catch(e){postMessage({type:"log",level:3,message:`Could not compute nuclear attraction matrix: ${e.message}`})}postMessage({type:"log",level:2,message:"Computing Fock matrix..."});try{const e=s.fockMatrix(o.molecularOrbitals);g.matrices.fock=c(e)}catch(e){postMessage({type:"log",level:3,message:`Could not compute Fock matrix: ${e.message}`})}postMessage({type:"log",level:2,message:"Extracting density matrix..."});try{const e=o.molecularOrbitals.densityMatrix;g.matrices.density=c(e)}catch(e){postMessage({type:"log",level:3,message:`Could not extract density matrix: ${e.message}`})}postMessage({type:"log",level:2,message:"Extracting MO coefficients..."});try{const e=o.coefficients();g.matrices.coefficients=c(e)}catch(e){postMessage({type:"log",level:3,message:`Could not extract MO coefficients: ${e.message}`})}try{const e=o.orbitalEnergies(),s=[];for(let t=0;t<e.size();t++)s.push(e.get(t));g.orbitalEnergies=s}catch(e){postMessage({type:"log",level:3,message:`Could not extract orbital energies: ${e.message}`})}try{const e=o.orbitalOccupations(),s=[];for(let t=0;t<e.size();t++)s.push(e.get(t));g.orbitalOccupations=s,postMessage({type:"log",level:2,message:`Extracted ${s.length} orbital occupations`})}catch(e){postMessage({type:"log",level:3,message:`Could not extract orbital occupations: ${e.message}`});try{const e=r.numElectrons?r.numElectrons():5*r.size(),s=g.orbitalEnergies?g.orbitalEnergies.length:0;if(s>0){const t=[];let a=e;for(let e=0;e<s;e++)a>=2?(t.push(2),a-=2):1===a?(t.push(1),a=0):t.push(0);g.orbitalOccupations=t,postMessage({type:"log",level:2,message:`Estimated orbital occupations for ${e} electrons`})}}catch(t){postMessage({type:"log",level:3,message:`Could not estimate occupations: ${t.message}`})}}}catch(e){postMessage({type:"log",level:3,message:`Matrix computation failed: ${e.message}`})}postMessage({type:"result",success:!0,results:g})}catch(o){postMessage({type:"result",success:!1,error:o.message})}}(r);break;case"setLogLevel":l=r.level,o&&o.setLogLevel&&(o.setLogLevel(l),postMessage({type:"log",level:2,message:`Log level set to ${l}`}));break;default:postMessage({type:"error",error:`Unknown message type: ${s}`})}}catch(c){postMessage({type:"error",error:c.message||"Unknown error occurred",stack:c.stack})}var l}))})();